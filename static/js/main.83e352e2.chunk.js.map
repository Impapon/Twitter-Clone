{"version":3,"sources":["Component/FirebaseConfig/Firebase.js","Component/Feed/TweetBox.js","Component/Feed/Post.js","Component/Feed/Feed.js","Component/Menu/SideBarOption.js","Component/Menu/Menu.js","Component/Widgets/Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TweetBox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","className","Avatar","src","type","onChange","e","target","value","placeholder","Button","onClick","preventDefault","collection","add","displayName","userName","verified","text","image","avatar","Post","love","setLove","alt","style","fontSize","color","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","sideBarOption","active","Icon","Menu","HomeIcon","ExploreIcon","Notifications","MessageIcon","BookMarkIcon","ListIcon","ProfileIcon","MoreIcon","variant","fullWidth","Widgets","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83e352e2.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nimport firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyADDMfq0ZGW7j50huNc03G1uMK-qjm42t8\",\r\n    authDomain: \"twitter-clone-6101d.firebaseapp.com\",\r\n    projectId: \"twitter-clone-6101d\",\r\n    storageBucket: \"twitter-clone-6101d.appspot.com\",\r\n    messagingSenderId: \"115325889262\",\r\n    appId: \"1:115325889262:web:59f52c31799d69014ee1ff\",\r\n    measurementId: \"G-H1494LMWKB\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n  \r\n  export default db;","import { Avatar, Button } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport './TweetBox.css'\r\nimport db from '../FirebaseConfig/Firebase'\r\n\r\nconst TweetBox = () => {\r\n    const [tweetMessage,setTweetMessage] = useState(\"\")\r\n    const [tweetImage,setTweetImage] = useState(\"\")\r\n\r\n    const handleTweetBtn =(e)=>{\r\n        e.preventDefault();\r\n        db.collection('posts').add({\r\n            displayName:\"Mahadi Hasan\",\r\n            userName:\"itsBaraq\",\r\n            verified:true,\r\n            text:tweetMessage,\r\n            image:tweetImage,\r\n            avatar:\"https://media.giphy.com/media/YWLGIVanrsSbKY6z49/giphy.gif\" \r\n        \r\n        }  ) \r\n      \r\n        setTweetMessage(\"\")\r\n        setTweetImage(\"\")\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"tweetBox\">\r\n              <form>\r\n                <div className=\"tweetBox-input\">\r\n                <Avatar src=\"https://robohash.org/0feae02ae510e29ddec6fb9f0e5c376b?set=set4&bgset=&size=400x400\"/>\r\n                \r\n                <input type=\"text\"\r\n                onChange={e=>setTweetMessage(e.target.value)}\r\n                 value={tweetMessage} \r\n                 placeholder=\"What's going on\" />\r\n\r\n                </div>\r\n\r\n                <div className=\"tweetBox-imgField\">\r\n\r\n                <input type=\"text\"\r\n                onChange={e=>setTweetImage(e.target.value)}\r\n                value={tweetImage}\r\n                placeholder=\"Enter image url\" />\r\n                </div>\r\n               \r\n                          \r\n            <Button onClick={handleTweetBtn} type =\"submit\" className=\"tweetBtn\" >Tweet</Button>\r\n            </form>\r\n         \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TweetBox;","import { Avatar } from '@material-ui/core';\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport React, { useState } from 'react';\r\nimport './Post.css'\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\n\r\nconst Post = ({ displayName, userName, verified, text, image, avatar, }) => {\r\n\r\n    const [love, setLove] = useState(0)\r\n    const handleLove = () => {\r\n        setLove(love + 1)\r\n    }\r\n    return (\r\n\r\n        <div className=\"post\" >\r\n            <div className=\"post__avatar\">\r\n                <Avatar src={avatar} />\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <div className=\"post__header\">\r\n                    <div className=\"post__headerText\">\r\n                        <h3>\r\n                            {displayName}{\" \"}\r\n                            <span className=\"post__headerSpecial\">\r\n                                {verified && <VerifiedUserIcon className=\"post__badge\" />} @\r\n                                {userName}\r\n                            </span>\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"post__headerDescription\">\r\n                        <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                <img src={image} alt=\"\" />\r\n                <div className=\"post__footer\">\r\n                    <ChatBubbleOutlineIcon />\r\n                    <RepeatIcon />\r\n                    <div>\r\n                        <FavoriteBorderIcon\r\n                            onClick={handleLove}\r\n                        /> <span style={{fontSize:'27px',color:'red'}}>{love} </span> \r\n                    </div>\r\n                    <PublishIcon />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Post;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport TweetBox from './TweetBox'\r\nimport Post from './Post'\r\nimport './Feed.css'\r\nimport db from '../FirebaseConfig/Firebase'\r\n\r\nconst Feed = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n  \r\n    useEffect(() => {\r\n       \r\n      db.collection(\"posts\").onSnapshot((snapshot) =>\r\n          \r\n        setPosts(snapshot.docs.map((doc) => doc.data()))\r\n        )\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feedHeader\">\r\n                <h2>Home</h2>\r\n            </div>\r\n            <TweetBox />\r\n            {\r\n                posts.map(post => (\r\n                    <Post\r\n                        displayName={post.displayName}\r\n                        userName={post.userName}\r\n                        verified={post.verified}\r\n                        text={post.text}\r\n                        image={post.image}\r\n                        avatar={post.avatar}\r\n                    />\r\n                )\r\n                )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Feed;","import React from 'react';\r\nimport './SideBarOption.css'\r\n\r\nconst sideBarOption = ({active, text, Icon }) => {\r\n    return (\r\n        <div className={`sideBarOption ${active && 'sideBarOption--active'}`}>\r\n         <Icon />\r\n         {text} \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default sideBarOption;","import React from 'react';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport SideBarOption from './SideBarOption'\r\nimport ExploreIcon from '@material-ui/icons/Search'\r\nimport Notifications from '@material-ui/icons/NotificationsNone'\r\nimport MessageIcon from '@material-ui/icons/MailOutline'\r\nimport BookMarkIcon from '@material-ui/icons/BookmarkBorder'\r\nimport ListIcon from '@material-ui/icons/ListAlt'\r\nimport ProfileIcon from '@material-ui/icons/PermIdentity'\r\nimport MoreIcon from '@material-ui/icons/MoreHoriz'\r\nimport {Button} from '@material-ui/core'\r\nimport './Menu.css'\r\n\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className=\"sideBar\">\r\n           <TwitterIcon className=\"twitterIcon\"/>\r\n       <SideBarOption active Icon ={HomeIcon} text=\"Home\"/>\r\n       <SideBarOption Icon ={ExploreIcon} text=\"Explore\"/>\r\n       <SideBarOption Icon ={Notifications} text=\"Notification\"/>\r\n       <SideBarOption Icon ={MessageIcon} text=\"Message\"/>\r\n       <SideBarOption Icon ={BookMarkIcon} text=\"Bookmark\"/>\r\n       <SideBarOption Icon ={ListIcon} text=\"List\"/>\r\n       <SideBarOption Icon ={ProfileIcon} text=\"Profile\"/>\r\n       <SideBarOption Icon ={MoreIcon} text=\"More\"/>\r\n      <Button variant='outlined' fullWidth className=\"tweetBtn\">Tweet</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nconst Widgets = () => {\r\n    return (\r\n        <div>\r\n                Widgets\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Widgets;","\nimport './App.css';\nimport Feed from './Component/Feed/Feed';\nimport Menu from './Component/Menu/Menu';\nimport Widgets from './Component/Widgets/Widgets';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Feed/>\n      <Widgets/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}